version: '3.8'

services:
  app:
    image: sanantino/cogenist_backend:latest
    ports:
      - "5000:5000"  # API Port
      - "5001:5001"  # WebSocket Port
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - HOSTNAME=${HOSTNAME}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
      - REDIS_HOST=redis  # Explicitly set Redis hostname
      - REDIS_PORT=6379   # Explicitly set Redis port
      - REDIS_PASSWORD=${REDIS_PASSWORD}  # Ensure app uses the same password
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy  # Wait for Redis to be healthy
    restart: unless-stopped
    networks:
      - app-network
    command: npm run start:prod

  redis:
    image: redis/redis-stack-server:latest
    container_name: redis-stack-server
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: redis-server --requirepass "${REDIS_PASSWORD}" --maxmemory 100mb --maxmemory-policy allkeys-lru --protected-mode no
    env_file:
      - .env
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

volumes:
  redis-data:

networks:
  app-network:
    driver: bridge