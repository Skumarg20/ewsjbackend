services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "${PORT}:${PORT}"
    environment:
      - NODE_ENV=development
      - PORT=${PORT}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
      - RAZORPAY_KEY=${RAZORPAY_KEY}
      - RAZORPAY_SECRET=${RAZORPAY_SECRET}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GEMINI_API_URL=${GEMINI_API_URL}
      - ACCESS_KEY=${ACCESS_KEY}
      - SECRET_ACCESS_KEY=${SECRET_ACCESS_KEY}
      - SQL_HOST=db
      - SQL_PORT=3306  # Hardcode or ensure .env matches container port
      - SQL_USERNAME=${SQL_USERNAME}
      - SQL_PASSWORD=${SQL_PASSWORD}
      - SQL_DATABASE=${SQL_DATABASE}
      - REDIS_HOST=redis
      - REDIS_PORT=6379  # Hardcode or ensure .env matches container port
    depends_on:
      - db
      - redis
    # volumes:  # Comment out or remove to avoid Windows node_modules conflict
    #   - .:/app
    #   - /app/node_modules
    networks:
      - app-network
    restart: unless-stopped  # Add for continuous running

  db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=${SQL_PASSWORD}
      - MYSQL_DATABASE=${SQL_DATABASE}
      - MYSQL_USER=${SQL_USERNAME}
      - MYSQL_PASSWORD=${SQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    restart: unless-stopped  # Add for continuous running

  redis:
    image: redis:7.0
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: unless-stopped  # Add for continuous running

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
  redis-data: